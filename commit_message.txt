Refactor: Implement Unified Pipeline Architecture (v2)

This major refactoring introduces a unified data processing pipeline (v2)
to address inconsistencies and improve maintainability of the
BALANCE-pyexcel codebase.

Key changes and achievements:

1.  **Unified Pipeline Engine (`src/balance_pipeline/pipeline_v2.py`):**
    Created `UnifiedPipeline` class as the central processing engine,
    wrapping core logic from `csv_consolidator.py`. Supports "strict"
    and "flexible" schema modes.

2.  **Output Adapters (`src/balance_pipeline/outputs.py`):**
    Introduced `PowerBIOutput` (Parquet) and `ExcelOutput` classes
    for formatted data output, separating concerns.

3.  **Centralized Configuration (`src/balance_pipeline/config_v2.py`):**
    Implemented `PipelineConfig` dataclass and a global instance
    (`pipeline_config_v2`) for managing all pipeline settings.

4.  **New Primary CLI (`src/balance_pipeline/main.py`):**
    Developed `balance-pipe`, a new Click-based CLI, as the primary
    interface for the v2 pipeline. Updated `pyproject.toml` to include
    this script entry.

5.  **Backward Compatibility:**
    -   Legacy CLI (`src/balance_pipeline/cli.py`, now `balance-legacy-cli`)
        updated to use `UnifiedPipeline` internally.
    -   Excel entry point (`src/balance_pipeline/__init__.py:etl_main`)
        updated to use `UnifiedPipeline`.

6.  **Testing and Validation:**
    -   Created `tests/test_unified_pipeline.py` with initial tests.
    -   Added `scripts/validate_migration.py` for comparing legacy and
        new pipeline outputs.

7.  **Documentation:**
    -   Authored `docs/ARCHITECTURE.md` detailing the new v2 design.
    -   Updated `README.md` with information on the new architecture,
        CLI usage, migration, and project structure.

This refactoring provides a more robust, maintainable, and extensible
foundation for future development.
