feat: Integrate ComprehensiveTransactionCleaner for advanced data refinement

This commit introduces the `ComprehensiveTransactionCleaner` into the CSV consolidation process, significantly enhancing data quality and standardization. The integration addresses previously identified limitations in merchant and description cleaning, aligning with a more robust, data-driven approach.

Key changes include:

**In `src/balance_pipeline/csv_consolidator.py`:**

*   **Imported New Cleaning Utilities:**
    *   `ComprehensiveTransactionCleaner` and `apply_comprehensive_cleaning` from `balance_pipeline.transaction_cleaner` are now imported to enable the new cleaning workflow.

*   **Replaced Legacy Merchant Cleaning:**
    *   The previous call to `_clean_merchant_column` within the `process_csv_files` function has been replaced with a call to `apply_comprehensive_cleaning`.
    *   This new function leverages analysis results (expected in `transaction_analysis_results/` or `comprehensive_analysis_results/`) to perform multi-faceted cleaning, including merchant standardization, description refinement, and creation of `OriginalMerchant`.

*   **Deprecated Old Cleaning Function:**
    *   The `_clean_merchant_column` function has been commented out, marking its replacement by the more advanced `ComprehensiveTransactionCleaner`. This preserves historical context while clearly indicating the shift in methodology.

*   **Updated Data Type Mappings:**
    *   The `dtype_map` has been updated to ensure `OriginalMerchant` and `Description` are explicitly typed as `str`, crucial for consistency and compatibility with downstream systems like Power BI.

**In `src/balance_pipeline/constants.py`:**

*   **Enhanced Master Schema:**
    *   The `OriginalMerchant` column has been added to `MASTER_SCHEMA_COLUMNS`. This formalizes its role in the canonical data structure, ensuring it's consistently handled throughout the pipeline.
    *   The descriptive columns within `MASTER_SCHEMA_COLUMNS` were reordered slightly for improved logical grouping.

**Rationale and Benefits:**

This integration implements a sophisticated, three-tier cleaning architecture that was designed based on comprehensive transaction analysis. It aims to:
*   Provide cleaner, more human-readable transaction descriptions.
*   Standardize merchant names effectively, reducing variability.
*   Introduce the `OriginalMerchant` column to preserve the raw merchant string, bridging a gap in the data lineage.
*   Improve overall data consistency, reliability, and readiness for analysis and automated reconciliation in Power BI.

This change is a pivotal step towards automating and streamlining the financial data reconciliation process.
