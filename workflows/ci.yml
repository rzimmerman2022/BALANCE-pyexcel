name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    strategy:
      fail-fast: false # Keep running other matrix jobs even if one fails
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.10', '3.11']
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install --with dev
        # Add shell: bash for Windows compatibility if needed, but Poetry often handles it

      - name: Install Java (Ubuntu)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y default-jre

      - name: Install OpenJDK (Windows)
        if: runner.os == 'Windows'
        run: choco install openjdk --no-progress -y # Added -y for non-interactive

      - name: Install Ghostscript (Windows only)
        if: matrix.os == 'windows-latest'
        run: choco install ghostscript -y

      - name: Run tests
        run: poetry run pytest

  build_docs:
    needs: test # Run after all test matrix jobs succeed
    runs-on: ubuntu-latest # Build docs on a consistent environment
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install --with dev

      - name: Build MkDocs site
        run: poetry run mkdocs build --strict # Build into the 'site' directory

      - name: Upload documentation artifact
        uses: actions/upload-artifact@v4
        with:
          name: docs-site-${{ github.sha }} # Unique name per run
          path: site/ # Upload the contents of the 'site' directory

  deploy_docs:
    if: github.ref == 'refs/heads/main' # Only deploy on pushes to main
    needs: build_docs # Run after docs are built
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed for gh-deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install --with dev

      - name: Deploy MkDocs to GitHub Pages
        run: poetry run mkdocs gh-deploy --force

  build_executable:
    needs: test # Run after all test matrix jobs succeed
    runs-on: windows-latest # Build executable on Windows
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install --with dev # Install project deps first

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build executable
        # Use the Windows ; separator for --add-data
        run: pyinstaller --onefile --name balance-pyexcel src/balance_pipeline/cli.py --add-data "rules/schema_registry.yml;rules"

      - name: Upload executable artifact
        uses: actions/upload-artifact@v4
        with:
          name: balance-pyexcel-windows-${{ github.sha }} # Unique name per run
          path: dist/balance-pyexcel.exe # Path to the built executable
