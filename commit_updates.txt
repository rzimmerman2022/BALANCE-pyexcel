Project: BALANCE-pyexcel
Update Date: $(Get-Date -Format yyyy-MM-dd)

Refactor: Strengthen foundational schema and enhance data flow

Centralized core column definitions in new foundation.py.
Updated config.py to use this centralized definition.
Enhanced csv_consolidator.py for better cleaner input handoff
and derived new 'sharing_status' column.

This update focuses on strengthening the core data foundation of the BALANCE-pyexcel pipeline. The primary goal was to establish a clear, consistent, and reliable set of foundational columns for all processed transactions, improving maintainability and downstream data usage.

Key Changes Implemented:

1.  **Centralized Foundational Schema (`src/balance_pipeline/foundation.py`):**
    *   A new module `foundation.py` was created to serve as the single source of truth for the core data schema.
    *   It defines `CORE_FOUNDATION_COLUMNS`, which includes: TxnID, Owner, Date, Amount, Merchant, Description, Category, Account, and the newly derived `sharing_status`.
    *   It also specifies `CORE_FOUNDATION_DTYPES` using pandas ExtensionDtypes for better handling of nullable data.
    *   This centralization makes the core schema explicit and easier to manage.

2.  **Configuration Update (`src/balance_pipeline/config.py`):**
    *   The `CORE_REQUIRED_COLUMNS` list in `config.py` now imports its definition directly from `foundation.CORE_FOUNDATION_COLUMNS`.
    *   This change ensures that the "flexible" schema mode, which relies on `CORE_REQUIRED_COLUMNS`, aligns with the new centralized foundational schema.

3.  **Enhancements to `csv_consolidator.py`:**
    *   **Improved Data Handoff to Cleaner:** Logic was added to ensure that `OriginalDescription` and `OriginalMerchant` columns are properly populated before data is passed to the `ComprehensiveTransactionCleaner`. This is achieved by copying data from `Description` or `Merchant` if the "Original" versions are missing or entirely NA, ensuring the cleaner has the appropriate raw input.
    *   **`sharing_status` Derivation:** A new column, `sharing_status`, is now derived at the end of the `process_csv_files` function. Its value ('individual', 'shared', 'split', or NA) is determined based on the `SharedFlag` and `SplitPercent` columns. This provides a clear, consolidated field for transaction sharing status.
    *   **NumPy Import:** `numpy` was imported as `np` to support the `sharing_status` derivation logic (specifically for `np.select`).

Impact:
These changes are expected to lead to a more robust and maintainable pipeline. By defining a clear foundational schema and ensuring its consistent production:
*   Downstream data consumption and analysis become more reliable.
*   The roles of different data fields (e.g., `Description` vs. `OriginalDescription`) are clarified.
*   Future development and refactoring efforts have a more stable core to build upon.

This refactoring addresses the need for a solid data contract at the heart of the transaction processing workflow.
