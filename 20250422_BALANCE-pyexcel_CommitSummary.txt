Test: Pass initial multi-schema ingestion tests

Context:
This commit marks the successful passing of the initial cross-schema ingestion tests (`test_multi_schema_load`). It incorporates fixes to the schema registry based on sample data analysis and confirms the core pipeline can now process multiple CSV formats correctly.

Changes Verified/Implemented Leading to This State:

1.  Schema Registry (`rules/schema_registry.yml`):
    * Corrected `header_signature` for Discover and Wells Fargo schemas based on provided sample data headers.
    * Corrected Wells Fargo schema to map `Amount` and `Category` directly (removed incorrect derivation logic). Updated WF `sign_rule` to `flip_if_positive`.
    * Corrected Monarch schema `column_map` for `Date` and `Category`, and updated `sign_rule` to `as_is` based on sample data.
    * Added `Category` mapping to Rocket Money schema.
    * Ensured YAML structure is valid and includes verbose comments.

2.  TOML Configuration (`pyproject.toml`):
    * Corrected duplicate `[tool.poetry.group.dev.dependencies]` section.
    * Added `PyYAML` as a required main dependency.
    * Ensured all dependencies are correctly listed.

3.  Python Environment:
    * Ran `poetry lock` to update the lock file based on corrected `pyproject.toml`.
    * Ran `poetry install --with dev` successfully, installing all dependencies and the local `balance_pipeline` package into the virtual environment.

4.  Testing (`tests/test_cross_schema.py` & `sample_data_multi/`):
    * Populated `tests/test_cross_schema.py` with the `test_multi_schema_load` function.
    * Created `sample_data_multi/` directory with `jordyn/` and `ryan/` subfolders.
    * Added anonymized sample CSV files for all 5 formats (Chase, Discover, WF, Monarch, Rocket) into the appropriate subfolders.
    * Executed `poetry run pytest -q`, which now reports `1 passed`.

Current State (After this commit):
* The core schema-aware ingestion pipeline (`ingest.py`, `normalize.py`, `utils.py`, `__init__.py`) successfully processes sample data for all defined formats according to the corrected `rules/schema_registry.yml`.
* The primary cross-schema test (`test_multi_schema_load`) passes, validating owner tagging, standard column presence, basic null checks (including for 'Account'), and basic amount sign handling.
* Project dependencies are correctly installed and locked.
* Documentation (`README.md`, `architecture.md`) reflects the schema-aware architecture.

Next Steps (Immediate):
* Address the requirement to handle potential duplicate transactions when importing from *both* Monarch Money and Rocket Money by implementing the de-duplication strategy (modifying YAML, ingest.py, normalize.py).

--- End of Content ---