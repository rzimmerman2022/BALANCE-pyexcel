# ==============================================================================
# File:    schema_registry.yml
# Project: BALANCE-pyexcel
# Author:  Ryan Zimmerman / AI Assistant
# Purpose: Defines rules for parsing different bank/source CSV formats.
#          The 'ingest.py' script reads this file to determine how to handle
#          each unique CSV layout dynamically.
#
# Revision History:
# 2025-04-21 (v0.1.0) - Initial creation based on proposal, added comments.
# 2025-04-22 (v0.1.1) - Corrected Discover & WF header_signatures,
#                        fixed WF amount handling (use direct map, remove derived),
#                        fixed Monarch date mapping & sign rule, added Category maps.
# ==============================================================================
# Instructions: To add a new CSV format:
# 1. Copy an existing block (e.g., `- id: ... sign_rule: ...`).
# 2. Change the `id` to something unique (e.g., `amex_blue_cash`).
# 3. Update `match_filename` with a glob pattern matching the new CSV's name.
# 4. Update `header_signature` with a few column names unique to that CSV format.
# 5. Update `column_map` to map the CSV's column names to our STANDARD_COLS.
# 6. Choose the correct `sign_rule` ('as_is', 'flip_if_positive', 'flip_if_withdrawal').
# 7. Add `derived_columns` only if needed (like the original WF example, now removed).
# ==============================================================================
# --- Start of Schema Definitions ---

# ------------------------------------------------------------------------------
# Schema ID: chase_total_checking
# Description: Rules for Chase Total Checking account exports.
# ------------------------------------------------------------------------------
- id: chase_total_checking
  # How to identify files matching this schema (uses glob pattern matching on filename).
  match_filename: "Jordyn - Chase Bank - Total Checking*" # Matches files starting like this
  # List of column headers that MUST be present in the CSV to confirm it's this schema. Case-sensitive.
  header_signature: ["Name", "Institution", "Account Type", "Transaction Date"]
  # Mapping from the column names found IN THE CSV to our STANDARD column names.
  column_map:
    Transaction Date: Date       # Source 'Transaction Date' maps to our 'Date'
    Description: Description    # Source 'Description' maps to our 'Description'
    Amount: Amount              # Source 'Amount' maps to our 'Amount'
    Category: Category          # Source 'Category' maps to our 'Category' (Chase provides this)
    Account Type: Account       # Map Account Type to our standard Account column
  # Rule for correcting the sign of the 'Amount' column.
  # 'flip_if_withdrawal': Makes 'Amount' negative ONLY IF the 'Category' column
  #                       contains 'Withdrawal' or 'Payment' (case-insensitive).
  #                       Assumes deposits are already negative in the source file.
  sign_rule: flip_if_withdrawal

# ------------------------------------------------------------------------------
# Schema ID: discover_it_card
# Description: Rules for Discover It credit card exports.
# ------------------------------------------------------------------------------
- id: discover_it_card
  # How to identify files matching this schema (glob pattern).
  match_filename: "Jordyn - Discover - Discover It Card*"
  # Header check: Ensure these specific columns exist in the CSV.
  header_signature: ["Name", "Institution", "Card Type", "Date"]
  # Column mapping: Source CSV column -> Standard internal column name.
  column_map:
    Date: Date
    Description: Description
    Amount: Amount
    Category: Category          # Discover sample includes Category
    Card Type: Account         # Map Card Type to our standard Account column
  # Sign rule: How to handle the Amount sign.
  # 'as_is': Keep the sign exactly as it appears in the CSV.
  #          Discover sample showed payments (outflow context) were already negative.
  sign_rule: as_is

# ------------------------------------------------------------------------------
# Schema ID: wells_fargo_card
# Description: Rules for Wells Fargo Active Cash card exports.
# ------------------------------------------------------------------------------
- id: wells_fargo_card
  # How to identify files matching this schema (glob pattern).
  match_filename: "Jordyn - Wells Fargo - Active Cash*"
  # Header check: Ensure these specific columns exist in the CSV.
  header_signature: ["Name", "Institution", "Account Description"]
  # Column mapping: Source CSV column -> Standard internal column name.
  column_map:
    Date: Date
    Description: Description
    Amount: Amount              # <<< FIX: Added direct Amount mapping (sample confirmed it exists)
    Category: Category          # <<< FIX: Added direct Category mapping (sample confirmed it exists)
    Account Description: Account # Map Account Description to our standard Account column
  # derived_columns:             # <<< FIX: REMOVED derived_columns section (not needed)
  # Sign rule: How to handle the Amount sign.
  # 'flip_if_positive': Makes any positive Amount negative. Assumes credits/payments are negative.
  #                     Chosen because Purchases in sample were positive.
  sign_rule: flip_if_positive   # <<< FIX: Changed from as_is based on sample data review

# ------------------------------------------------------------------------------
# Schema ID: monarch_export
# Description: Rules for exports generated from Monarch Money aggregator.
# ------------------------------------------------------------------------------
- id: monarch_export
  # How to identify files matching this schema (glob pattern).
  match_filename: "BALANCE - Monarch Money*"
  # Header check: Ensure these specific columns exist in the CSV.
  header_signature: ["Merchant", "Account", "Original Statement"]
  # Static columns to add to every row from this source
  extra_static_cols:
    Source: "Monarch"
  # Column mapping: Source CSV column -> Standard internal column name.
  column_map:
    Date: Date
    Merchant: Description       # Use Monarch's 'Merchant' field as our standard 'Description'.
    Amount: Amount
    Account: Account
    Institution: Bank           # Map Institution to Bank for consistent naming
    Category: Category
  # Sign rule: How to handle the Amount sign.
  # 'as_is': Keep the sign as is. Monarch sample showed outflows were already negative.
  sign_rule: as_is

# ------------------------------------------------------------------------------
# Schema ID: rocket_money
# Description: Rules for exports generated from Rocket Money aggregator.
# ------------------------------------------------------------------------------
- id: rocket_money
  # How to identify files matching this schema (glob pattern).
  match_filename: "BALANCE - Rocket Money*"
  # Header check: Ensure these specific columns exist in the CSV.
  header_signature: ["Account Name", "Institution Name", "Amount"]
  # Static columns to add to every row from this source
  extra_static_cols:
    Source: "Rocket"
  # Column mapping: Source CSV column -> Standard internal column name.
  column_map:
    Date: Date
    Description: Description    # Use the existing Description field instead of Name
    Amount: Amount
    Account Name: Account       # Use Rocket Money's 'Account Name' as our standard 'Account'.
    Institution Name: Bank      # Map Institution Name to Bank for consistent naming
    Category: Category
  # Sign rule: How to handle the Amount sign.
  # 'flip_if_positive': Flips positive amounts to negative.
  #                     Rocket Money sample showed expenses were positive.
  sign_rule: flip_if_positive

# ------------------------------------------------------------------------------
# Schema ID: jordyn_pdf
# Description: Rules for CSVs generated from Jordyn's PDFs via process_pdfs.py script.
# NOTE: Header signature and column map are initial guesses based on typical PDF
#       statement structures extracted by Camelot. May need refinement after
#       inspecting the actual CSV output from the script.
# ------------------------------------------------------------------------------
- id: jordyn_pdf
  # Match CSVs generated by the PDF script
  match_filename: "BALANCE - Jordyn PDF -*.csv" # Corrected key from glob to match_filename
  # Column mapping for the 15 columns extracted by Tabula
  column_map:
    Skip_1:            _      # payment-promo blurb – ignore
    Skip_2:            _      # payment-promo blurb – ignore
    Skip_3:            _      # payment-promo blurb – ignore
    Skip_4:            _      # empty
    Skip_5:            _      # “Annual” label – ignore
    Skip_6:            _      # empty
    Skip_7:            _      # “Days in” label – ignore
    Skip_8:            _      # empty
    Skip_9:            _      # empty
    AccountLast4:      AcctLast4   # 4296
    TransDate:         Date        # Map source 'TransDate' to standard 'Date'
    PostDate:          TransPost   # 12/19
    ReferenceNumber:   RefNum      # 2469216PJ2ZJR7YXH
    RawMerchant:       Description # Map source 'RawMerchant' to standard 'Description'
    Amount:            Amount      # 10.56
  # Sign rule: credits appear positive in source, flip to match debit-positive convention
  sign_rule: flip_if_positive # Use the recognized rule string

# ==============================================================================
# End of Schema Registry File
# ==============================================================================
